!!!
%html
  %head
    %meta{charset: "utf-8"}/
    %meta{content: "chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %meta{content: "width=device-width, initial-scale=1, maximum-scale=1", name: "viewport"}/
    %link{href: "https://fonts.googleapis.com/css?family=Droid+Serif:400italic,400,700italic,700|Arbutus+Slab:400", rel: "stylesheet", type: "text/css"}/
    %link{href: "../assets/stylesheets/fonts.css", rel: "stylesheet", type: "text/css"}/
    %link{href: "../assets/stylesheets/base.css", media: "screen", rel: "stylesheet", type: "text/css"}/
    %link{href: "../assets/stylesheets/main.css", media: "screen", rel: "stylesheet", type: "text/css"}/
    %link{href: "../assets/stylesheets/snippets.css", media: "screen", rel: "stylesheet", type: "text/css"}/
    %script{ src: "http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"}
    %script{src: "//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-53bc43800229b6a1", type: "text/javascript"}
    %script{src: "http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML", type: "text/javascript"}
    %script{type: "text/x-mathjax-config"}
      MathJax.Hub.Config({
      tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
      }
      });
    %title Double Pendulum

  %body
    %header.main-title
      %h1 Double Pendulum
      %h2 Double Pendulum in less than 100 lines of JavaScript
      %a.anchor-nav{href: "../index.html"} < Back to Projects


    .content-wrapper
      .inner.clearfix
        %section
          %a{href: "../projects/double-pendulum-sim.html", target:"_blank"} Double Pendulum Demo!
          %p
            The Double Pendulum is a simple yet rich physical system. The motion of the pendulums is governed by a pair of coupled differential equations, which we will solve using the Euler method.
            To simulate the system let's first create the methods to draw the balls and the strings that hold them together.
          %code.code-snippet
            %script{src: "http://gist-it.appspot.com/github/micaeloliveira/physics-sandbox/blob/feature/new-styling/assets/javascripts/pendulum.js?slice=14:31;footer=minimal"}
          %p
            Now, we have to figure out the way the strings and the balls are going to move, i.e., we need to solve the equations of motion for the system.
            Let's start by expressing the cartesian coordinates of the two pendulums

          %img#pendulum{ src: '../assets/images/pendulum.jpg', alt: "pendulum"}

          %p
            %span.formula-snippet
              $$x_1 = l_1\sin \theta_1$$
              $$y_1 = -l_1\cos \theta_1$$
              $$x_2 = l_1\sin \theta_1 + l_2\sin \theta_2$$
              $$y_2 = -l_1\cos \theta_1 -l_2\cos \theta_2$$
            We will solve the equations of motion in polar coordinates and we are going to use the Lagrangian $L = T- V$ to derive them.
            The Kinetic energy of the system is
            %span.formula-snippet
              $$T = \frac{1}{2}m_1(\dot{x_1}^2+\dot{y_1}^2)+\frac{1}{2}m_2(\dot{x_2}^2+\dot{y_2}^2)$$
            which expressed in polar coordinates is
            %span.formula-snippet
              $$T = \frac{1}{2}m_1h_1^2\dot{\theta_1}^2+\frac{1}{2}m_2\left(h_1^2\dot{\theta_1}^2+h_2^2\dot{\theta_2}^2+2h_1h_2\dot{\theta_1}\dot{\theta_2}\cos(\theta_1-\theta_2)\right)$$
            The potential energy of the system is
            %span.formula-snippet
              $$V = m_1gy_1+m_2gy_2 = -(m_1+m_2)gl_1\cos \theta_1 - m_2 g l_2 \cos \theta_2 $$
            The Lagrange equations for $\theta_1$ and $\theta_2$ are
            %span.formula-snippet
              $$ \frac{d}{dt}\left(\frac{\partial L}{\partial\dot{\theta_i}}\right) - \frac{\partial L}{\partial \theta_i} = 0 $$
            Working out the details of the two Lagrange equations, we end up with
            %span.formula-snippet
              $$ \ddot{\theta_1} =\frac{g\left(\sin \theta_2 \cos (\theta_1-\theta_2)- \mu\sin \theta_1\right)-\left(l_2\dot{\theta_2}^2+l_1\dot{\theta_1}^2\cos (\theta_1-\theta_2)\right)\sin (\theta_1-\theta_2)}{l_1\left(\mu-\cos^2 (\theta_1-\theta_2)\right)}$$
            %span.formula-snippet
              $$ \ddot{\theta_2} = \frac{g\mu(\sin \theta_1\cos (\theta_1 - \theta_2) - \sin \theta_2)+\left(\mu l_1\dot{\theta_1}^2+l_2\dot{\theta_2}^2\cos(\theta_1-\theta_2)\right)\sin(\theta_1-\theta_2)}{l_2\left(\mu-\cos^2 (\theta_1-\theta_2)\right)}$$
            where $ \mu = 1 + \frac{m_1}{m_2}$.
            %br
            Now, to solve the equations of motion for the angles we can use the Euler method. To do that we just have to define a time interval and iterate over time.
          %code.code-snippet
            %script{src: "http://gist-it.appspot.com/github/micaeloliveira/physics-sandbox/blob/feature/new-styling/assets/javascripts/pendulum.js?slice=32:40;footer=minimal"}
          %p
            The angular accelerations, velocities and positions for the instant $t+\Delta t$ are all calculated using the same variables in $t$. Once we calculate the new angles we just need to update the positions of the balls and strings and re-draw the elements.
          %code.code-snippet
            %script{src: "http://gist-it.appspot.com/github/micaeloliveira/physics-sandbox/blob/feature/new-styling/assets/javascripts/pendulum.js?slice=46:58;footer=minimal"}
          %p
            And there you have it, a simulation of the double pendulum written in less than 100 lines of javscript! Go ahead and play with the
            %a{href: "../projects/double-pendulum-sim.html"} demo!
            %a{href: "https://github.com/micaeloliveira/physics-sandbox/blob/feature/new-styling/assets/javascripts/pendulum.js"} [Source]

            Learn more about the double pendulum on
            = succeed "." do
              %a{href: "http://en.wikipedia.org/wiki/Double_pendulum"} wikipedia

          %p
            %a#devil-button{href: "mailto:physicsandbox@gmail.com?subject=Found a better solution!"}
              %i.icon-emo-devil
              Click here
            if you think you can make it more interesting

        %footer{style: "margin-top:40px;color: rgba(0,0,0,0.6)"}
          Share to
          .addthis_sharing_toolbox{style: "display: inline-block;margin-left:4px"}

        %footer
          %a{href: "https://github.com/micaeloliveira/physics-sandbox"}
            %small
              View project on GitHub

  :javascript
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-52657030-1', 'auto');
    ga('send', 'pageview');
